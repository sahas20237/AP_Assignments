import java.util.Scanner;

class Vaccines{
    public String name;
    public int doses;
    public int gap;

    public Vaccines(String name, int doses, int gap){
        this.name = name;
        this.doses = doses;
        this.gap = gap;
    }

    public Vaccines(String name, int doses){
        this.name = name;
        this.doses = doses;
        this.gap = 0;
    }

    public String toString(){
        return "Vaccine Name: "+ name + "\s" + "Number of Doses: " + doses + "\s" + "Gap between Doses: "+ gap + "\n";
    }
}

// class Vtest{ // addVaccines
//     public static void main(String[] args){
//         Vaccines vac[] = new Vaccines[2];
//         vac[0] = new Vaccines("Covi", 2, 3);
//         vac[1] = new Vaccines("Covax", 1, 0);

//         for (Vaccines i : vac) {
//             System.out.println(i);
//         }
//     }
// }

class Hospitals{
    public String name;
    public int pincode;
    public int ID;

    public Hospitals(String name, int pincode){
        this.name = name;
        this.pincode = pincode;
        this.ID = 100000 + (int)(Math.random()*999999);
    }

    public String toString(){
        return "Allocated Hospital ID is " + ID + "\n" + "Hospital Name: "+ name + "\s" + "Pincode: " + pincode + "\s" + "Unique ID: "+ ID + "\n";
    }
}

// class Htest{ // addHospitals
//     public static void main(String[] args){
//         Hospitals hos[] = new Hospitals[2];
//         hos[0] = new Hospitals("Medistar", 110091);
//         hos[1] = new Hospitals("Apollo", 110016);

//         for (Hospitals i : hos) {
//             System.out.println(i);
//         }
//     }
// }

class Citizens{
    public String name;
    public int age;
    public String aadhar;
    public String status;
    public String vaccinetaken;
    public int dueday;
    public int howmanydoses;

    public Citizens(String name, int age, String aadhar){
        this.name = name;
        this.age = age;
        this.aadhar = aadhar;
        this.howmanydoses = 0;
        this.dueday = 0;
        this.status = "REGISTERED";
        this.vaccinetaken = "None";
    }

    public String toString(){
        return status + "\n" + "Citizen Name: " + name + "\s" + "Age: " + age + "\s" + "Aadhar ID: " + aadhar;
    }
}

// class Ctest{ // addHospitals
//     public static void main(String[] args){
//         Citizens cit[] = new Citizens[2];
//         cit[0] = new Citizens("Arnav", 18, "123456789098");
//         cit[1] = new Citizens("Sahas", 19, "123456789012");

//         for (Citizens i : cit) {
//             System.out.println(i.age);
//         }
//     }
// }

class Slots{
    public int ID;
    public int day;
    public int quantity;
    public String type;

    public Slots(int ID, int day, int quantity, String type){
        this.ID = ID;
        this.day = day;
        this.quantity = quantity;
        this.type = type;
    }

    public String toString(){
        return "Slots added by Hospital: " + ID + "\s" + "for Day: " + day + "\s" + "Quantity: "+ quantity + "\s" + "Vaccine: " + type;
    }
}

// class Stest{ // addHospitals
//     public static void main(String[] args){
//         Slots slots[] = new Slots[2];
//         // slots[0] = new Slots(121111, 1, 5, "Covax");
//         // slots[1] = new Slots(212112, 2, 6, "Covi");

//         for (Slots i : slots) {
//             System.out.println(i);
//         }
//     }
// }

class myMain{
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("Covin Portal Initialized...");
        
        int numberofvacs = 0;
        Vaccines vac[] = new Vaccines[1000];

        int numberofhos = 0;
        Hospitals hos[] = new Hospitals[1000];

        int numberofcit = 0;
        Citizens cit[] = new Citizens[1000];

        int numberofslo = 0;
        Slots slo[] = new Slots[1000];

        while (true){
            System.out.println("------------------------");
            System.out.println(
            "1. Add Vaccine" + "\n" + 
            "2. Register Hospital" + "\n" +
            "3. Register Citizen" + "\n" +
            "4. Add Slot for Vaccination" + "\n" +
            "5. Book Slot for Vaccination" + "\n" +
            "6. List all slots for a hospital "+ "\n" +
            "7. Check Vaccination Status" + "\n" +
            "8. Exit");
            System.out.println("------------------------");

            System.out.print("Enter query number: "); int query = sc.nextInt();

            if (query == 1){
                System.out.print("Vaccine Name: " ); String name = sc.next();
                System.out.print("Number of Doses: " ); int doses = sc.nextInt();
                if (doses == 1){
                    vac[numberofvacs] = new Vaccines(name, doses);
                } else{
                    System.out.print("Gap between Doses: " ); int gap = sc.nextInt();
                    vac[numberofvacs] = new Vaccines(name, doses, gap);
                }
                
                System.out.println(vac[numberofvacs]);
                numberofvacs += 1;
            }

            if (query == 2){
                System.out.print("Hospital Name: " ); String name = sc.next();
                System.out.print("Pincode: " ); int pincode = sc.nextInt();
                hos[numberofhos] = new Hospitals(name, pincode);
                System.out.println(hos[numberofhos]);
                numberofhos += 1;
            }

            if (query == 3){
                System.out.print("Citizen Name: " ); String  name = sc.next();
                System.out.print("Age: " ); int age = sc.nextInt();
                System.out.print("Aadhar ID: " );  String aadhar = sc.next();
                if (age > 18){
                    cit[numberofcit] = new Citizens(name, age, aadhar);
                    cit[numberofcit].status = "REGISTERED";
                    System.out.println(cit[numberofcit]);
                    numberofcit += 1;
                } else{
                    System.out.println("Only above 18 are allowed");
                }
            }

            if (query == 4){
                System.out.print("Enter Hospital ID: "); int hosID = sc.nextInt();
                for (int i=0; i<numberofhos; i++){
                    if (hos[i].ID == hosID){
                        System.out.print("Enter Number of Slots to be Added: "); int numslots = sc.nextInt();
                        for (int j=0; j<numslots; j++){ 
                            System.out.print("Enter Day Number: "); int day = sc.nextInt();
                            System.out.print("Enter Quantity: "); int quantity = sc.nextInt();
                            System.out.print("Select Vaccine: " + "\n"); 
                            for (int k=0; k<numberofvacs; k++){
                                System.out.println(k + ". " + vac[k].name);
                            }
                            int type = sc.nextInt();
                            slo[numberofslo] = new Slots(hosID, day, quantity, vac[type].name);
                            System.out.println(slo[numberofslo]);
                            numberofslo += 1;
                        }
                    }
                }
            }

            if (query == 5){
                System.out.print("Enter Patient ID: "); String aadharID = sc.next();
                System.out.println("1. Search by Pincode" + "\n" + "2. Search by Vaccine" + "\n" + "3. Exit");
                System.out.print("Enter Option: "); int option = sc.nextInt();
                if (option == 1){
                    System.out.print("Enter Pincode: "); int pin = sc.nextInt();
                    for (int i=0; i<numberofhos; i++){
                        if (hos[i].pincode == pin){
                            System.out.println("ID: " + hos[i].ID + "\s" + "Name: " + hos[i].name);
                        }
                    }
                    boolean flag = true;
                    boolean flag3 = true;
                    int thatday = 0;
                    int thatquant = 0;
                    String thattype = "";
                    int counter1 = 0;
                    System.out.print("Enter Hospital ID: "); int chosenhosID = sc.nextInt();
                    for (int i=0; i<numberofslo; i++){
                        if (slo[i].ID == chosenhosID){
                            for (int j=0; j<numberofcit; j++){
                                if (cit[j].aadhar.equals(aadharID)){
                                    if (flag3 == true){
                                        if (cit[j].dueday == 0 || cit[j].dueday <= slo[i].day){
                                            System.out.println(counter1 + ". Day: " + slo[i].day + "\s" + "Available Quantity: " + slo[i].quantity + "\s" + "Vaccine: " + slo[i].type);
                                            counter1 += 1;
                                        } else{
                                            System.out.println("NO SLOTS AVAILABLE");
                                            flag = false;
                                            flag3 = false;
                                            break;
                                        }
                                    }
                                    
                                }
                            }
                            
                        }
                    }
                    boolean flag2 = true;
                    if (flag == true){
                        System.out.print("Choose Slot: "); int chosenSlot = sc.nextInt();
                        int counter = 0;
                        for (int m=0; m<numberofslo; m++){
                            if (slo[m].ID == chosenhosID){
                                if (counter == chosenSlot){
                                    thatday =  slo[m].day; thatquant = slo[m].quantity; thattype = slo[m].type;
                                    if (thatquant > 0){
                                        slo[m].quantity -= 1;
                                    } else if (thatquant == 0){
                                        System.out.println("NO SLOTS AVAILABLE");
                                        flag2 = false;
                                        break;
                                    }
                                }
                                counter += 1;
                            }
                        }
                        int numDoses = 0;
                        int thatgap = 0;
                        if (flag2 == true){
                            for (int j=0; j<numberofcit; j++){
                                if (cit[j].aadhar.equals(aadharID)){
                                    if (cit[j].vaccinetaken.equals("None")){
                                        cit[j].vaccinetaken = thattype;
                                        for (int k=0; k<numberofvacs; k++){
                                            if (vac[k].name.equals(thattype)){
                                                numDoses = vac[k].doses;
                                                thatgap = vac[k].gap;
                                                cit[j].howmanydoses += 1;
                                            }
                                        }
                                    } else if (cit[j].vaccinetaken.equals(thattype)){
                                        for (int k=0; k<numberofvacs; k++){
                                            if (vac[k].name.equals(thattype)){
                                                numDoses = vac[k].doses;
                                                thatgap = vac[k].gap;
                                                cit[j].howmanydoses += 1;
                                            }
                                        }
                                    } else{
                                        System.out.println("NO SLOTS AVAILABLE");
                                        break;
                                    }
                                    if (cit[j].howmanydoses == numDoses){
                                        cit[j].status = "FULLY VACCINATED";
                                        System.out.println(cit[j].name + " "  + cit[j].status + " by " + cit[j].vaccinetaken);
                                    } else{
                                        cit[j].status = "PARTIALLY VACCINATED";
                                        cit[j].dueday = thatday + thatgap;
                                        System.out.println(cit[j].name + " "  + cit[j].status + " by " + cit[j].vaccinetaken);
                                    }
                                }
                            }
                        }
                    }
                    
                }

                if (option == 2){
                    System.out.print("Enter Vaccine Name: "); String vacname = sc.next();
                    for (int i=0; i<numberofslo; i++){
                        if (slo[i].type.equals(vacname)){
                            int thatID = slo[i].ID;
                            String thatname = "";
                            for (int j=0; j<numberofhos; j++){
                                if (hos[j].ID == thatID){
                                    thatname = hos[j].name;
                                }
                            }
                            System.out.println("Hospital ID: " + thatID + "\s" + "Hospital Name: " + thatname);
                        }
                    }
                    boolean flag = true;
                    boolean flag3 = true;
                    int thatday = 0;
                    int thatquant = 0;
                    String thattype = "";
                    int counter1 = 0;
                    System.out.print("Enter Hospital ID: "); int chosenhosID = sc.nextInt();
                    for (int i=0; i<numberofslo; i++){
                        if (slo[i].ID == chosenhosID){
                            for (int j=0; j<numberofcit; j++){
                                if (cit[j].aadhar.equals(aadharID)){
                                    if (flag3 == true){
                                        if (cit[j].dueday == 0 || cit[j].dueday <= slo[i].day){
                                            System.out.println(counter1 + ". Day: " + slo[i].day + "\s" + "Available Quantity: " + slo[i].quantity + "\s" + "Vaccine: " + slo[i].type);
                                            counter1 += 1;
                                        } else{
                                            System.out.println("NO SLOTS AVAILABLE");
                                            flag = false;
                                            flag3 = false;
                                            break;
                                        }
                                    }
                                    
                                }
                            }
                            
                        }
                    }
                    boolean flag2 = true;
                    if (flag == true){
                        System.out.print("Choose Slot: "); int chosenSlot = sc.nextInt();
                        int counter = 0;
                        for (int m=0; m<numberofslo; m++){
                            if (slo[m].ID == chosenhosID){
                                if (counter == chosenSlot){
                                    thatday =  slo[m].day; thatquant = slo[m].quantity; thattype = slo[m].type;
                                    if (thatquant > 0){
                                        slo[m].quantity -= 1;
                                    } else if (thatquant == 0){
                                        System.out.println("NO SLOTS AVAILABLE");
                                        flag2 = false;
                                        break;
                                    }
                                }
                                counter += 1;
                            }
                        }
                        int numDoses = 0;
                        int thatgap = 0;
                        if (flag2 == true){
                            for (int j=0; j<numberofcit; j++){
                                if (cit[j].aadhar.equals(aadharID)){
                                    if (cit[j].vaccinetaken.equals("None")){
                                        cit[j].vaccinetaken = thattype;
                                        for (int k=0; k<numberofvacs; k++){
                                            if (vac[k].name.equals(thattype)){
                                                numDoses = vac[k].doses;
                                                thatgap = vac[k].gap;
                                                cit[j].howmanydoses += 1;
                                            }
                                        }
                                    } else if (cit[j].vaccinetaken.equals(thattype)){
                                        for (int k=0; k<numberofvacs; k++){
                                            if (vac[k].name.equals(thattype)){
                                                numDoses = vac[k].doses;
                                                thatgap = vac[k].gap;
                                                cit[j].howmanydoses += 1;
                                            }
                                        }
                                    } else{
                                        System.out.println("NO SLOTS AVAILABLE");
                                        break;
                                    }
                                    if (cit[j].howmanydoses == numDoses){
                                        cit[j].status = "FULLY VACCINATED";
                                        System.out.println(cit[j].name + " "  + cit[j].status + " by " + cit[j].vaccinetaken);
                                    } else{
                                        cit[j].status = "PARTIALLY VACCINATED";
                                        cit[j].dueday = thatday + thatgap;
                                        System.out.println(cit[j].name + " "  + cit[j].status + " by " + cit[j].vaccinetaken);
                                    }
                                }
                            }
                        }
                    }
                }
                if (option == 3){
                    continue;
                }
            }

            if (query == 6){
                System.out.print("Enter Hospital Id: "); int hosID = sc.nextInt();
                for (int i=0; i<numberofslo; i++){
                    if (slo[i].ID == hosID){
                        System.out.print("Day: " + slo[i].day + "\s"); 
                        System.out.print("Vaccine: " +  slo[i].type + "\s");
                        System.out.print("Available Quantity: " + slo[i].quantity + "\n");
                    }
                }
            }

            if (query == 7){
                System.out.print("Enter Citizen ID: "); String aadharID = sc.next();
                for (int i=0; i<numberofcit; i++){
                    if (cit[i].aadhar.equals(aadharID)){
                        System.out.println(cit[i].status);
                        if (cit[i].status.equals("PARTIALLY VACCINATED")){
                            System.out.println("Vaccine Administered: " + cit[i].vaccinetaken);
                            System.out.println("Number of Doses given: " + cit[i].howmanydoses);
                            System.out.println("Due date of Next Vaccination: " + cit[i].dueday);
                            
                        }
                        else if (cit[i].status.equals("FULLY VACCINATED")){
                            System.out.println("Vaccine Administered: " + cit[i].vaccinetaken);
                            int numdoses = 0;
                            for (int j=0; j<numberofvacs; j++){
                                if (vac[j].name == cit[i].vaccinetaken){
                                    numdoses = vac[j].doses;
                                }
                            }
                            System.out.println("Number of Doses given: " + numdoses);
                        }
                    }
                }
            }

            if (query == 8){
                break;
            }
        }
        sc.close();
    }
}
